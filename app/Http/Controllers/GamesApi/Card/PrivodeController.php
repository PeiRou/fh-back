<?php
/* 龍城娱乐 */
namespace App\Http\Controllers\GamesApi\Card;

use App\Http\Controllers\Controller;
use App\GamesApi;
use App\GamesApiConfig;
use Illuminate\Support\Facades\DB;

class PrivodeController extends Controller{
    public function getBet(){
        $data = '{"GameID":["50-1543142151-1198379774-4","50-1543142391-1198399041-4","50-1543142266-1198388573-1","50-1543142285-1198390288-5","50-1543142313-1198392580-1","50-1543142334-1198394377-5","50-1543142356-1198396132-5","50-1543142398-1198399602-1","50-1543142378-1198397998-3","50-1543142409-1198400466-2","50-1543142424-1198401609-3","50-1543142435-1198402648-4","50-1543142475-1198405864-4","50-1543142495-1198407538-1","50-1543142529-1198410159-1","50-1543142565-1198413009-5","50-1543142595-1198415523-5","50-1543142631-1198418570-2","50-1543142659-1198420685-2","50-1543142677-1198422077-4","50-1543142706-1198424468-5","50-1543142156-1198379991-2","50-1543142190-1198382797-5","50-1543142214-1198384782-2","50-1543142493-1198407238-3","50-1543142527-1198409969-4","50-1543142556-1198412419-3","50-1543142580-1198414378-3","50-1543142601-1198416120-5","50-1543142629-1198418037-2"],"Accounts":["61203_lin3020","61203_moziyu0","61203_lin3020","61203_lin3020","61203_lin3020","61203_lin3020","61203_lin3020","61203_lin3020","61203_lin3020","61203_lin3020","61203_lin3020","61203_lin3020","61203_lin3020","61203_lin3020","61203_lin3020","61203_lin3020","61203_lin3020","61203_lin3020","61203_lin3020","61203_lin3020","61203_lin3020","61203_moziyu0","61203_moziyu0","61203_moziyu0","61203_moziyu0","61203_moziyu0","61203_moziyu0","61203_moziyu0","61203_moziyu0","61203_moziyu0"],"ServerID":[8304,8301,2203,2203,2203,2203,2203,2203,2203,2203,2203,2203,2203,2203,2203,2203,2203,2203,2203,2203,2203,8601,8601,8601,8601,8601,8601,8601,8601,8601],"KindID":[830,830,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,860,860,860,860,860,860,860,860,860],"TableID":[1660800018,1660200071,440600121,440600040,440600076,440600012,440600019,440600048,440600054,440600121,440600103,440600106,440600148,440600103,440600136,440600047,440600098,440600040,440600065,440600138,440600042,1720200041,1720200034,1720200059,1720200026,1720200003,1720200067,1720200040,1720200026,1720200038],"ChairID":[4,4,1,5,1,5,5,1,3,2,3,4,4,1,1,5,5,2,2,4,5,2,5,2,3,4,3,3,5,2],"UserCount":[4,4,5,3,4,3,4,3,5,3,4,4,3,5,5,3,3,3,4,4,4,5,5,5,5,5,5,5,5,5],"CellScore":["180.00","7.00","20.00","60.00","20.00","40.00","20.00","20.00","20.00","40.00","40.00","420.00","60.00","20.00","80.00","180.00","20.00","80.00","20.00","260.00","40.00","11.00","14.00","6.00","10.00","1.00","12.00","18.00","12.00","18.00"],"AllBet":["180.00","7.00","20.00","60.00","20.00","40.00","20.00","20.00","20.00","40.00","40.00","420.00","60.00","20.00","80.00","180.00","20.00","80.00","20.00","260.00","40.00","11.00","14.00","6.00","10.00","1.00","12.00","18.00","12.00","18.00"],"Profit":["-180.00","-7.00","-20.00","-60.00","-20.00","-40.00","-20.00","38.00","-20.00","57.00","57.00","399.00","-60.00","-20.00","-80.00","152.00","-20.00","-80.00","-20.00","342.00","-40.00","-11.00","-14.00","-6.00","9.50","0.95","-12.00","-18.00","-12.00","-18.00"],"Revenue":["0.00","0.00","0.00","0.00","0.00","0.00","0.00","2.00","0.00","3.00","3.00","21.00","0.00","0.00","0.00","8.00","0.00","0.00","0.00","18.00","0.00","0.00","0.00","0.00","0.50","0.05","0.00","0.00","0.00","0.00"],"GameStartTime":["2018-11-25 18:35:51","2018-11-25 18:39:51","2018-11-25 18:37:46","2018-11-25 18:38:05","2018-11-25 18:38:33","2018-11-25 18:38:54","2018-11-25 18:39:16","2018-11-25 18:39:58","2018-11-25 18:39:38","2018-11-25 18:40:09","2018-11-25 18:40:24","2018-11-25 18:40:35","2018-11-25 18:41:15","2018-11-25 18:41:35","2018-11-25 18:42:09","2018-11-25 18:42:45","2018-11-25 18:43:15","2018-11-25 18:43:51","2018-11-25 18:44:19","2018-11-25 18:44:37","2018-11-25 18:45:06","2018-11-25 18:35:56","2018-11-25 18:36:30","2018-11-25 18:36:54","2018-11-25 18:41:33","2018-11-25 18:42:07","2018-11-25 18:42:36","2018-11-25 18:43:00","2018-11-25 18:43:21","2018-11-25 18:43:49"],"GameEndTime":["2018-11-25 18:36:16","2018-11-25 18:40:19","2018-11-25 18:38:14","2018-11-25 18:38:27","2018-11-25 18:38:44","2018-11-25 18:39:11","2018-11-25 18:39:41","2018-11-25 18:40:02","2018-11-25 18:40:04","2018-11-25 18:40:18","2018-11-25 18:40:31","2018-11-25 18:41:08","2018-11-25 18:41:31","2018-11-25 18:42:12","2018-11-25 18:42:47","2018-11-25 18:43:09","2018-11-25 18:43:40","2018-11-25 18:44:12","2018-11-25 18:44:33","2018-11-25 18:45:01","2018-11-25 18:45:31","2018-11-25 18:36:22","2018-11-25 18:36:45","2018-11-25 18:37:12","2018-11-25 18:41:58","2018-11-25 18:42:26","2018-11-25 18:42:53","2018-11-25 18:43:15","2018-11-25 18:43:37","2018-11-25 18:44:07"],"CardValue":["2111340423082a021d19311a132212152b2501142","3d07181229163938031b2b2d2c01021d0c1924041","1202230d0b162a38051118363d2c294","1a23120000000000002d2c070814324","0c37350000001c04323c0b081723024","0000000000001735343323241d2c394","1807060000000b3a190c35341a26233","112d0a000000180512000000210d161","2c1c073d1d230c19343c03323717132","1a34222d1d380d3a270000000000002","3635033b18332302210000001b3a073","2a25332101032d04231713120000004","3d3706111413000000210d040000002","3836243129063d3a18210c283b0a095","213a340a172237272419090c3818314","0000000000002d38070c3a25112a365","0000000000003b0b1c110613213a183","2b3a17011d273414160000000000003","3c25122c03320000003b27241907151","0b280438182213032b0635140000004","221229212c0b1505390000000d25323","2934131523323d04210614113c16011","3d05021a26330d2a311b39342814231","1b25150807110924331d35221c0b064","0b16141d28373924231c3b3a2c26334","2c14320b25021c22112a09060c0a083","3d07062b08141b29112d3a010d0a381","1817220904132a27062c07020b05034","2b35322a0a262c1a021707060b19031","1b39272837323404121925030c38024"],"ChannelID":[61203,61203,61203,61203,61203,61203,61203,61203,61203,61203,61203,61203,61203,61203,61203,61203,61203,61203,61203,61203,61203,61203,61203,61203,61203,61203,61203,61203,61203,61203],"LineCode":["61203_c70zdl","61203_c70zdl","61203_c70zdl","61203_c70zdl","61203_c70zdl","61203_c70zdl","61203_c70zdl","61203_c70zdl","61203_c70zdl","61203_c70zdl","61203_c70zdl","61203_c70zdl","61203_c70zdl","61203_c70zdl","61203_c70zdl","61203_c70zdl","61203_c70zdl","61203_c70zdl","61203_c70zdl","61203_c70zdl","61203_c70zdl","61203_c70zdl","61203_c70zdl","61203_c70zdl","61203_c70zdl","61203_c70zdl","61203_c70zdl","61203_c70zdl","61203_c70zdl","61203_c70zdl"]}';
        $data = json_decode($data, 1);
        return $this->createData($data);
//        p($data,1);



        $list = GamesApi::getList();
        foreach ($list as $k=>$v){
            $res = $this->action($v->g_id, 'getBet');
            if(isset($res['code']) && $res['code'] != 0)
                echo $v->name.'更新失败：'.$res['msg'].'。错误码：'.$res['code']."\n";
        }
    }
    private function action($g_id, $action){
        $getGamesApiInfo = GamesApi::getGamesApiInfo($g_id);
        $config = $this->getConfig($g_id);
        if($getGamesApiInfo && $getGamesApiInfo['class_name']){
            $instanceName = $this->getInstanceName($getGamesApiInfo['class_name']);
            $repoName= $this->getRepositoryName($getGamesApiInfo['class_name']);
            $repo = new $repoName($config);
            $instance = new $instanceName($repo);
            $repo->gameInfo = $getGamesApiInfo;
            return $instance->action($action);
        }
        return [
            'code' => 1,
            'msg' => '没有这个游戏',
            'data' => []
        ];
    }


    //格式化数据  插入数据库
    public function createData($data){
        $tableName = 'jq_ky_bet';
        $table = DB::table($tableName);
        //根据GameID Accounts去掉重复的
        foreach ($data['GameID'] as $k => $k){
            $table->orWhere(['GameID'=>$data['GameID'][$k]])
                ->where([
                    'Accounts' => $data['Accounts'][$k],
                ]);
        }
        $distinctArr = $table->pluck('GameID')->toArray();
        $res['GameID'] = array_diff($data['GameID'],$distinctArr);
        $arr = [];
        foreach ($res['GameID'] as $k => $k){
            $arr[] = [
//                'g_id' => $this->gameInfo->g_id,
                'GameID' => $data['GameID'][$k],
                'Accounts' => $data['Accounts'][$k],
                'AllBet' => $data['AllBet'][$k],
                'Profit' => $data['Profit'][$k],
//                'Revenue' => $res['Revenue'][$k],
                'GameStartTime' => $data['GameStartTime'][$k],
                'GameEndTime' => $data['GameEndTime'][$k],
            ];
        }
        return $this->insertDB($arr, $table);
    }
    //插入数据库
    public function insertDB($data, $table){
        if($table->insert($data)){
            echo '插入'.count($data).'条数据';
        }else{
            echo '插入'.count($data).'条数据失败';
        }
    }

    //获取实例类名
    protected function getInstanceName($name = 'Base'){
        $class = sprintf("App\Http\Controllers\GamesApi\Card\%s",$name);
        return $class;
    }
    //获取服务类名
    protected function getRepositoryName($name = 'Base'){
        $class = sprintf("\App\Repository\GamesApi\Card\%sRepository",$name);
        return $class;
    }
    //获取配置
    protected function getConfig($g_id){
        $res = GamesApiConfig::select('key', 'value')->where('g_id', $g_id)->get()->toArray();
        $data = [];
        foreach ($res as $k=>$v){
            $data[$v['key']] = $v['value'];
        }
        return $data;
    }
    //组合验证数据
    protected function validateParam($data = [])
    {
        return $this->verifyData($data, [
            'tag' => ['required'],
//            'token' => ['required']
        ], [
//            'name.required' => '',
        ]);
    }
    //验证器数据
    protected function verifyData($data, $CallbackArr, $message)
    {
        $validator = Validator::make($data, $CallbackArr, $message);
        return ['stauts' => $validator->fails(), 'msg' => $validator->errors()->first()];
    }
}
